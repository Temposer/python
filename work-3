#变量的作用范围
#1 全局变量 ：   在整个全局的范围内都有效。在局部范围内也可以使用。
#2 局部变量 ：   局部变量在局部范围可以使用，
#LEGB原则：
    #L：局部作用域
    #E：外部嵌套函数的作用域
    #G：函数定义所在模块作用于。
    #B：
#在局部变量前面加上global可以将局部变量看做全局变量使用。当使用global时不能直接在局部变量后面赋值。

'''
def stu():
    global a
    a=100
    print(a)
stu()
print(a)
#可以通过globals（全局）和locals（局部）显示出全局变量和局部变量
a=1
c=2
def asd():
    g=124
    print("Locals={}".format(locals()))
    print("Globals={}".format(globals()))
asd()
'''
'''
x=0
def asd():
    global x
    x+=1
    print(x)
    asd()
asd()
'''
'''
a1=1
a2=1
print(a1)
def fb():
,  global a1
    global a2

    print(a2)
    a=a1
    b=a2
    t=a+b
    a1=a2
    a2=t
    fb()
fb()
'''
#type 函数负责打出函数的类型
l2=[100,120]
print(l2)
print(type(l2))
#形如上式中的l2叫做列表
l=[1,3,4,5,6,7,8,9]
print(l[0])
print(l[2],l[5])
print(l[1:5])#此为分片操作，输出的内容为l列表中的l[i]开始拦蓄输出到列表的l[j-1]
print(l[:])#   如果两边都不写，则输出整个列表。
print(l[:6])# 从第一个数开始，输出到l[j-1]
print(l[3:]) #从第l[i]开始输出到最后，
#列表的分片获取是可以控制获取幅度的。
print(l[1:4:1])#解析：l[l[1]:l[3]:输出长度为1个字符]
print(l[1:5:2])#解析：l[l[1]:l[5]:输出长度为2个字符]
#输出幅度是可以为负数的，  如果为负数，则表示从右向左退，最右边的数的下标为-1，依次为-1，-2，-3，……（从右向左）。
f=[1,3,4,5,6,7,8,9]
print(f[-4:-2]) #直接用分片法截取列表时，左边的数必须比右边的数小，否则无法截取。
print(f[-2:-4:-1])#表示从f[-2] 开始截取每次截取-1个字符，一直到f[-4]，

#pythom中的id 操作
a=20
b=200
print(id(a))#1424650304
print(id(b))#1424656064
c=a                    #由该算式可知当两个变量通过等号开始传值时，也为被传值得变量(c)赋予了id（赋予的id与传值变量（a）的id相同）
                       #从此时开始被传值变量（c）得以独立，如果传值变量（a）的id或者数值再发生变化，被传值变量（c）不再发生变化
print(id(c))#1424650304
print(a)
print(c)
a=30
print(c)
print(a)
print(id(a))
print(id(c))

#分片操作得到的是一个新的列表，与原列表的id是不一样
#分片操作与上边的式子实则是一样的，既l[:]与l 在数值上看上去是一样的但了l[:]已经获得了id，从此独立出去，l以后有任何数值
#或者id上的变化l[:]都不会发生改变。
a=f=[1,2,3,4,5,6,7]
b=f[:]
print(id(f))

print(id(f[:]))
f[1]=9
print(a)
print(b)
c=b
print(id(c))
print(c)
b=[1,2,3,4,5,6]
print(c)
#有上式可以证明以上结论。
